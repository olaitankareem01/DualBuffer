@using DualBuffer.Models.Enums;
@model MakeCallViewModel

<h2>Make Call</h2>

@using (Html.BeginForm("MakeCall", "Network", FormMethod.Post, new { @class = "form" }))
{
    <div class="form-group">
        @Html.LabelFor(model => model.Di)
        @Html.TextBoxFor(model => model.Di, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.SNR)
        @Html.TextBoxFor(model => model.SNR, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.WRB)
        @Html.TextBoxFor(model => model.WRB, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.N)
        @Html.TextBoxFor(model => model.N, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Nco)
        @Html.TextBoxFor(model => model.Nco, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.callType, "Call Type:")
        @Html.DropDownListFor(model => model.callType, Enum.GetValues(typeof(CallType)).Cast<CallType>().Select(e => new SelectListItem { Text = e.ToString(), Value = e.ToString() }), "Select an option", new { @class = "form-control" })
    </div>

    <button type="submit" class="btn btn-primary">Make Call</button>
}


